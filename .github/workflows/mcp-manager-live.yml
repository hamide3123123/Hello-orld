name: Spawn Workers Only (Connect to 165.232.134.47)

on:
  workflow_dispatch:
    inputs:
      runtime_minutes:
        description: 'Runtime in minutes'
        required: false
        default: '30'
      num_workers:
        description: 'Number of workers to spawn'
        required: false
        default: '1'

env:
  MANAGER_HOST: 165.232.134.47
  NATS_HOST: 165.232.134.47
  NATS_PORT: 4222
  REDIS_HOST: 165.232.134.47
  REDIS_PORT: 6379
  POSTGRES_HOST: 165.232.134.47
  POSTGRES_PORT: 5432
  POSTGRES_DB: mcp_manager
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  DOCKER_IMAGE: test123434sdd/mcp-remote-worker:latest

jobs:
  spawn-workers:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
      - name: üîç Checkout code
        uses: actions/checkout@v4

      - name: üîë Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: test123434sdd
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: üåê Test Connectivity to Server
        run: |
          echo "Testing connection to 165.232.134.47..."
          nc -zv -w5 165.232.134.47 4222 || exit 1
          nc -zv -w5 165.232.134.47 6379 || exit 1
          nc -zv -w5 165.232.134.47 5432 || exit 1
          echo "‚úÖ All services accessible!"

      - name: üê≥ Pull Worker Docker Image
        run: |
          docker pull ${{ env.DOCKER_IMAGE }}
          echo "‚úÖ Image pulled"

      - name: üßπ Cleanup Old Containers
        run: |
          docker ps -a | grep github-worker | awk '{print $1}' | xargs -r docker rm -f || true

      - name: üöÄ Spawn Worker
        run: |
          RUN_ID="${{ github.run_id }}"
          WORKER_ID="github-actions-worker-${RUN_ID}-1"
          
          docker run -d \
            --name github-worker-1 \
            -e WORKER_ID="$WORKER_ID" \
            -e WORKER_TAGS="github-actions,production" \
            -e MANAGER_HOST="${{ env.MANAGER_HOST }}" \
            -e NATS_HOST="${{ env.NATS_HOST }}" \
            -e REDIS_HOST="${{ env.REDIS_HOST }}" \
            -e REDIS_PASSWORD="" \
            -e POSTGRES_HOST="${{ env.POSTGRES_HOST }}" \
            -e POSTGRES_PASSWORD="${{ env.POSTGRES_PASSWORD }}" \
            -v /tmp/screenshots-1:/screenshots \
            ${{ env.DOCKER_IMAGE }}
          
          echo "‚úÖ Worker started: $WORKER_ID"

      - name: üìä Monitor Worker
        run: |
          echo "Monitoring worker for ${{ github.event.inputs.runtime_minutes }} minutes..."
          docker logs -f github-worker-1 &
          sleep $((${{ github.event.inputs.runtime_minutes }} * 60))
